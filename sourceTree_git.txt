소스트리 방식
처음에는 폴더를 만들고
파일 - 복제 - create를 클릭
폴더 클릭

들어가보자.
- 버전 생성하기 
아래의 것을 드래그앤 드롭으로 올린다.
그리고 메시지를 작성
이후 commit을 클릭한다.

버전생성
메모장을 저장하면 알아서 알아차린다.
이후 working copy로 돌아가서
아래의 것을 위로 땡기고.... 이후는 위와 같이
메시지 작성하고 commit하면 된다.

버전삭제(reset)
m5로 가고 싶으면 m5에서 우측버튼 -> reset(이 커밋까지 초기화)

주의사항 : 이미 인터넷에 올라간 것은 reset하면 안된다.

- 버전 revert(되돌리기)
충돌이 일어나지 않기 위해서 제일 마지막것을 선택한다.
실수로 입력한 것을 지우지 않으면서 이전의 것으로 돌아가기 위해서
(회계로 치면 실수를 기록하면서 이전으로 돌아가기 위해서)
하는 것이다.
revert이지만 소스트리에서는 reverse를 선택한다.(되돌리기)
만약에 중간에 있는 m3로 돌아가고 싶다면
계속해서 역순으로 하나하나씩 돌아가야한다. (마지막은 M4를 우클릭)
M4에서 일어난 변경사항만을 되돌린다는 것이기 때문에 충돌발생하는 것이다.

- 시간여행
더블클릭으로 이전에 생성한 것에 head를 두어 돌아갈 수 있다.
최신 버전으로 가고 싶다면 최신 것을 더블클릭하지 말고
master를 더블클릭해야한다!!!!!!!!!!!!

각각을 커밋이라고도 한다.
커밋은 각각을 나타내는 ID가 있는데 ㅈㄴ 길어서 앞 7글자만 보통 기록
이 ID를 SHA-1이라고도 한다.

- 비교
텍스트 파일은 쉽게 추가, 삭제 내용을 알 수 있지만 코드나 다른 것들은
잘 모를 수도 있다.
따라서 이것들을 확인하기 위해
파일을 우클릭해서 open current version을 클릭
비교하고 싶은 부분을 한번 클릭 후에 
아래에서 우클릭해서 "open selected version"을 한다.

외부 프로그램을 이용(ex kdiff)해서 비교를 하는 것도 가능하다.

- git3(Backup Sourcetree)

Local Repository -> Remote Repository : push
Local Repository <- Remote Repository : pull

local repository <- Remote Repository : clone(전체복사) 생처음부터

git hosting

github 사용
여기서는 https를 이용해서 연결할 것이다.

sourceTree에서 repository -> Add Remote 선택하기
https주소를 복붙하기

주소가 복잡해서 일일히 기억하기가 힘드니까
원격 이름을 붙이는데, 이 때 디폴트는 origin으로 하기로 약속했다.

- push하기
소스트리에서 push를 클릭한다.
backup! 하면
이전처럼 commit을 진행한다.
그리고 push를 클릭한다.
추적(track)을 항상 체크해주자.
	
- clone(복제,복원)
새탭을 열어서 clone을 누른다
이름을 원하는대로 바꾸어서 저장한다.

-pull하기
clone과 다르게 pull은 이미 git이 만들어져 있는 local 저장소에서 한다.
회사의 것을 집의 저장소에 가져와서 작업할 필요가 있을 때
pull을 통해 회사의 repository를 가져온다.
작업을 마치면 다시 commit 하고 push를 하면 되겠지!


-------------git3 Branch&충돌(Conflict)----------------
가지치기로 branch를 한다.

다만 주의해야 할 것이 충돌인데,
git은 A B가 서로 다른 부분을 수정했다면 알아서 합쳐준다.
다만, 같은 부분을 수정했다면 병합을 중지하고 충돌을 알린다.

생성과 동시에 Master라는 디폴트 브렌치를 생성한다.
그리고 거기서 작업을 진행하는 것이다.

각각 google apple ms를 가지고 만들었다!
더블클릭해서 자신이 위치한 commit이 헤드이다.

헤드를 다른 커밋으로 옮기는 (초점을 바꾸는) 행위를
체크 아웃이라고 한다.

-----브랜치 병합-------
apple과 google을 합쳐서 새로운 commit을 생성하려고 할 때,
apple과 google의 공통 조상 :  base라고 한다!!!!!!!!
합쳐서 생성된 새로운 commit : merge commit


merge 과정
master에 opentutorials를 땡겨서 병합하려면
master로 checkout하고 opentutorials에 우측 클릭으로
merge opentutorials into current branch

-> master 브랜치는 자신의 것과 opentutorials의 것을 동시에 가진다.

충돌을 해결하는 방법
우클릭해서 resolve conflict에서 설정하거나
스스로 해결한 후 mark resolved를 선택해서 해결했어! 라고 하기


- Conflict 3 merge way
2개의 브랜치를 비교한거는 2 way merge라고 한다.

3 way merge를 이용하면
base와 같지 않은 "수정한 부분을 채택"해서 자동으로 수정해준다.
만약 here와 there이 둘다 base와 같지 않고 수정했다면, 그것은 충돌이 일어난다.



























